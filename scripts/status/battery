#!/bin/sh

capacity=$(cat /sys/class/power_supply/BAT0/capacity) || exit
status=$(cat /sys/class/power_supply/BAT0/status)

if [ $status = Discharging ]; then
  if [ "$capacity" -gt 85 ]; then
    icon=""
  elif [ "$capacity" -le 85 -a "$capacity" -gt 60 ]; then
    icon=""
  elif [ "$capacity" -le 60 -a "$capacity" -gt 30 ]; then
    icon=""
  elif [ "$capacity" -le 30 -a "$capacity" -gt 10 ]; then
    icon=""
  elif [ "$capacity" -le 10 ]; then
    icon=""
  elif [ "$capacity" -le 5 ]; then
    icon="!"
  fi
else
  icon=""
fi
 
echo "$icon" "$capacity%"

case $BUTTON in
    1) dunstify --replace=1 "Battery: $capacity%" "$status";;
esac


# #!/bin/sh
#
# # Prints all batteries, their percentage remaining and an emoji corresponding
# # to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).
#
# case $BLOCK_BUTTON in
# 	3) notify-send "🔋 Battery module" "🔋: discharging
# 🛑: not charging
# ♻: stagnant charge
# 🔌: charging
# ⚡: charged
# ❗: battery very low!
# - Scroll to change adjust xbacklight." ;;
# 	4) xbacklight -inc 10 ;;
# 	5) xbacklight -dec 10 ;;
# 	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
# esac
#
# # Check if battery directories are detected
# [ ! -e /sys/class/power_supply/BAT?* ] && echo "No battery found" && exit 1
#
# # Loop through all attached batteries and format the info
# for battery in /sys/class/power_supply/BAT?*
# do
# 	# Sets up the status and capacity
# 	status=$(cat "$battery/status")
# 	case "$status" in
# 		"Full") status="⚡" ;;
# 		"Discharging") status="🔋" ;;
# 		"Charging") status="🔌" ;;
# 		"Not charging") status="🛑" ;;
# 		"Unknown") status="♻️" ;;
# 	esac
# 	capacity=$(cat "$battery/capacity")
# 	# Will make a warn variable if discharging and low
# 	[ "$status" = "🔋" ] && [ "$capacity" -le 25 ] && warn="❗"
# 	# Prints the info
# 	printf "%s%s%d%%\n" "$status" "$warn" "$capacity"; unset warn
# done && return 0
